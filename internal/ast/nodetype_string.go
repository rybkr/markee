// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeDocument-0]
	_ = x[NodeParagraph-1]
	_ = x[NodeHeader-2]
	_ = x[NodeCodeBlock-3]
	_ = x[NodeBlockquote-4]
	_ = x[NodeList-5]
	_ = x[NodeListItem-6]
	_ = x[NodeHorizontalRule-7]
	_ = x[NodeText-8]
	_ = x[NodeEmphasis-9]
	_ = x[NodeStrong-10]
	_ = x[NodeInlineCode-11]
	_ = x[NodeLineBreak-12]
}

const _NodeType_name = "NodeDocumentNodeParagraphNodeHeaderNodeCodeBlockNodeBlockquoteNodeListNodeListItemNodeHorizontalRuleNodeTextNodeEmphasisNodeStrongNodeInlineCodeNodeLineBreak"

var _NodeType_index = [...]uint8{0, 12, 25, 35, 48, 62, 70, 82, 100, 108, 120, 130, 144, 157}

func (i NodeType) String() string {
	idx := int(i) - 0
	if i < 0 || idx >= len(_NodeType_index)-1 {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[idx]:_NodeType_index[idx+1]]
}
