// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeNone-0]
	_ = x[NodeDocument-1]
	_ = x[NodeBlockquote-2]
	_ = x[NodeList-3]
	_ = x[NodeListItem-4]
	_ = x[NodeCodeBlock-5]
	_ = x[NodeHTMLBlock-6]
	_ = x[NodeThematicBreak-7]
	_ = x[NodeHeading-8]
	_ = x[NodeParagraph-9]
	_ = x[NodeCodeSpan-10]
	_ = x[NodeHTMLSpan-11]
	_ = x[NodeEmphasis-12]
	_ = x[NodeStrong-13]
	_ = x[NodeLink-14]
	_ = x[NodeImage-15]
	_ = x[NodeSoftBreak-16]
	_ = x[NodeLineBreak-17]
	_ = x[NodeContent-18]
}

const _NodeType_name = "NodeNoneNodeDocumentNodeBlockquoteNodeListNodeListItemNodeCodeBlockNodeHTMLBlockNodeThematicBreakNodeHeadingNodeParagraphNodeCodeSpanNodeHTMLSpanNodeEmphasisNodeStrongNodeLinkNodeImageNodeSoftBreakNodeLineBreakNodeContent"

var _NodeType_index = [...]uint8{0, 8, 20, 34, 42, 54, 67, 80, 97, 108, 121, 133, 145, 157, 167, 175, 184, 197, 210, 221}

func (i NodeType) String() string {
	idx := int(i) - 0
	if i < 0 || idx >= len(_NodeType_index)-1 {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[idx]:_NodeType_index[idx+1]]
}
