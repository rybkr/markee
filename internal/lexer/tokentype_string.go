// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenEOF-0]
	_ = x[TokenError-1]
	_ = x[TokenText-2]
	_ = x[TokenSpace-3]
	_ = x[TokenNewline-4]
	_ = x[TokenHeader-5]
	_ = x[TokenCodeFence-6]
	_ = x[TokenHorizontalRule-7]
	_ = x[TokenBlockquote-8]
	_ = x[TokenListMarker-9]
	_ = x[TokenBacktick-10]
	_ = x[TokenStar-11]
	_ = x[TokenUnderscore-12]
}

const _TokenType_name = "TokenEOFTokenErrorTokenTextTokenSpaceTokenNewlineTokenHeaderTokenCodeFenceTokenHorizontalRuleTokenBlockquoteTokenListMarkerTokenBacktickTokenStarTokenUnderscore"

var _TokenType_index = [...]uint8{0, 8, 18, 27, 37, 49, 60, 74, 93, 108, 123, 136, 145, 160}

func (i TokenType) String() string {
	idx := int(i) - 0
	if i < 0 || idx >= len(_TokenType_index)-1 {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[idx]:_TokenType_index[idx+1]]
}
